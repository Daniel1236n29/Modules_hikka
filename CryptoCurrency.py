# meta developer: @shrimp_mod

from telethon import events
from .. import loader, utils
import aiohttp
import json

@loader.tds
class CryptoCurrencyMod(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∫—É—Ä—Å–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç"""
    strings = {"name": "CryptoCurrency"}

    async def get_exchange_rates(self):
        async with aiohttp.ClientSession() as session:
            async with session.get("https://open.er-api.com/v6/latest/USD") as resp:
                data = await resp.json()
                return data['rates']['RUB'], data['rates']['EUR']

    @loader.command(
        doc="–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π –∫—É—Ä—Å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã."
    )
    async def crypto(self, message):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –∫—É—Ä—Å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –≤ —Ä—É–±–ª—è—Ö, –¥–æ–ª–ª–∞—Ä–∞—Ö –∏ –µ–≤—Ä–æ"""
        query = utils.get_args_raw(message)
        if not query:
            return await utils.answer(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Ç–∏–∫–µ—Ä –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã.")

        async with aiohttp.ClientSession() as session:
            async with session.get("https://api.coinlore.net/api/tickers/?start=0&limit=100") as resp:
                data = await resp.json()

        coin = next((item for item in data['data'] if query.lower() in item['name'].lower() or query.lower() in item['symbol'].lower()), None)

        if not coin:
            return await utils.answer(message, f"–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞ '{query}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")

        price_usd = float(coin['price_usd'])
        usd_rub_rate, usd_eur_rate = await self.get_exchange_rates()
        
        price_rub = price_usd * usd_rub_rate
        price_eur = price_usd * usd_eur_rate

        response = f"üí∞ {coin['name']} ({coin['symbol']})\n\n"
        response += f"USD: ${price_usd:.2f}\n"
        response += f"RUB: ‚ÇΩ{price_rub:.2f}\n"
        response += f"EUR: ‚Ç¨{price_eur:.2f}\n"

        await utils.answer(message, response)
